<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="gpu_slam_bot">

  <!-- Robot parameters -->
  <xacro:property name="base_width" value="0.30"/>
  <xacro:property name="base_length" value="0.45"/>
  <xacro:property name="base_height" value="0.08"/>
  <xacro:property name="wheel_radius" value="0.08"/>
  <xacro:property name="wheel_width" value="0.06"/>
  <xacro:property name="wheel_separation" value="0.35"/>
  <xacro:property name="caster_radius" value="0.03"/>

  <!-- Materials -->
  <material name="metallic_gray"><color rgba="0.7 0.7 0.75 1"/></material>
  <material name="wheel_black"><color rgba="0 0 0 1"/></material>
  <material name="stripe_green"><color rgba="0 1 0 1"/></material>
  <material name="pusher_red"><color rgba="1 0 0 1"/></material>

  <!-- Base link -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="metallic_gray"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="3.0"/>
      <inertia ixx="${(1/12)*3.0*(base_width*base_width + base_height*base_height)}"
               iyy="${(1/12)*3.0*(base_length*base_length + base_height*base_height)}"
               izz="${(1/12)*3.0*(base_length*base_length + base_width*base_width)}"
               ixy="0" ixz="0" iyz="0"/>
    </inertial>
  </link>

  <!-- Lidar -->
  <link name="lidar_link">
    <visual>
      <origin xyz="0 0 0.03" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.06" radius="0.055"/>
      </geometry>
      <material name="metallic_gray"/>
    </visual>
    <collision>
      <origin xyz="0 0 0.03" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.06" radius="0.055"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0.03"/>
      <mass value="0.2"/>
      <inertia ixx="0.0004" iyy="0.0004" izz="0.0003" ixy="0" ixz="0" iyz="0"/>
    </inertial>
  </link>

  <joint name="lidar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="0 0 ${base_height/2 + 0.03}" rpy="0 0 0"/>
  </joint>

  <!-- Left Wheel - FIXED orientation and positioning -->
  <link name="wheel_left">
    <visual>
      <origin xyz="0 0 0" rpy="1.5708 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>
      <material name="wheel_black"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="1.5708 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="1.5"/>
      <inertia ixx="${(1/12)*1.5*(3*wheel_radius*wheel_radius + wheel_width*wheel_width)}"
               iyy="${0.5*1.5*wheel_radius*wheel_radius}"
               izz="${(1/12)*1.5*(3*wheel_radius*wheel_radius + wheel_width*wheel_width)}"
               ixy="0" ixz="0" iyz="0"/>
    </inertial>
  </link>

  <!-- Right Wheel - FIXED orientation and positioning -->
  <link name="wheel_right">
    <visual>
      <origin xyz="0 0 0" rpy="1.5708 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>
      <material name="wheel_black"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="1.5708 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="1.5"/>
      <inertia ixx="${(1/12)*1.5*(3*wheel_radius*wheel_radius + wheel_width*wheel_width)}"
               iyy="${0.5*1.5*wheel_radius*wheel_radius}"
               izz="${(1/12)*1.5*(3*wheel_radius*wheel_radius + wheel_width*wheel_width)}"
               ixy="0" ixz="0" iyz="0"/>
    </inertial>
  </link>

  <!-- Wheel joints - FIXED positioning and rotation axis -->
  <joint name="wheel_left_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_left"/>
    <origin xyz="0 ${wheel_separation/2} ${-wheel_radius}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.1" friction="0.1"/>
  </joint>

  <joint name="wheel_right_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_right"/>
    <origin xyz="0 ${-wheel_separation/2} ${-wheel_radius}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.1" friction="0.1"/>
  </joint>

  <!-- Caster - FIXED positioning -->
  <link name="caster_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry><sphere radius="${caster_radius}"/></geometry>
      <material name="metallic_gray"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry><sphere radius="${caster_radius}"/></geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="${(2/5)*0.1*caster_radius*caster_radius}"
               iyy="${(2/5)*0.1*caster_radius*caster_radius}"
               izz="${(2/5)*0.1*caster_radius*caster_radius}"
               ixy="0" ixz="0" iyz="0"/>
    </inertial>
  </link>

  <joint name="caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_link"/>
    <origin xyz="-${base_length/2 - 0.05} 0 ${-wheel_radius + caster_radius - 0.005}" rpy="0 0 0"/>
  </joint>

  <!-- Front pusher -->
  <link name="front_pusher_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry><box size="0.02 0.20 0.06"/></geometry>
      <material name="pusher_red"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry><box size="0.02 0.20 0.06"/></geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="${(1/12)*0.1*(0.20*0.20 + 0.06*0.06)}"
               iyy="${(1/12)*0.1*(0.02*0.02 + 0.06*0.06)}"
               izz="${(1/12)*0.1*(0.02*0.02 + 0.20*0.20)}"
               ixy="0" ixz="0" iyz="0"/>
    </inertial>
  </link>

  <joint name="front_lifter_joint" type="prismatic">
    <parent link="base_link"/>
    <child link="front_pusher_link"/>
    <origin xyz="${base_length/2 + 0.01} 0 ${-base_height/2}" rpy="0 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="10" velocity="0.1" lower="0.0" upper="0.25"/>
    <dynamics damping="2.0" friction="0.5"/>
  </joint>

  <!-- Gazebo diff_drive plugin -->
  <gazebo>
    <plugin name="diff_drive" filename="libgazebo_ros_diff_drive.so">
      <ros>
        <namespace>/</namespace>
      </ros>
      <update_rate>100</update_rate>
      <left_joint>wheel_left_joint</left_joint>
      <right_joint>wheel_right_joint</right_joint>
      <wheel_separation>${wheel_separation}</wheel_separation>
      <wheel_diameter>${2*wheel_radius}</wheel_diameter>
      <max_wheel_torque>50.0</max_wheel_torque>
      <max_wheel_acceleration>10.0</max_wheel_acceleration>
      <command_topic>cmd_vel</command_topic>
      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>
      <publish_odom>true</publish_odom>
      <publish_wheel_tf>true</publish_wheel_tf>
      <publish_tf>true</publish_tf>
      <publish_odom_tf>true</publish_odom_tf>
    </plugin>
  </gazebo>

  <!-- Gazebo plugin for pusher control -->
  <gazebo>
    <plugin name="lifter_position_controller" filename="libgazebo_ros_joint_pose_trajectory.so">
      <ros>
        <namespace>/</namespace>
      </ros>
      <joint_name>front_lifter_joint</joint_name>
      <topic_name>front_lifter_cmd</topic_name>
    </plugin>
  </gazebo>

  <!-- Gazebo materials and physics -->
  <gazebo reference="base_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  
  <gazebo reference="lidar_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  
  <gazebo reference="front_pusher_link">
    <material>Gazebo/Red</material>
  </gazebo>

  <!-- Wheel physics properties -->
  <gazebo reference="wheel_left">
    <material>Gazebo/Black</material>
    <surface>
      <friction>
        <ode>
          <mu>1.0</mu>
          <mu2>1.0</mu2>
          <fdir1>1 0 0</fdir1>
        </ode>
      </friction>
    </surface>
  </gazebo>

  <gazebo reference="wheel_right">
    <material>Gazebo/Black</material>
    <surface>
      <friction>
        <ode>
          <mu>1.0</mu>
          <mu2>1.0</mu2>
          <fdir1>1 0 0</fdir1>
        </ode>
      </friction>
    </surface>
  </gazebo>

  <!-- Caster physics -->
  <gazebo reference="caster_link">
    <material>Gazebo/Grey</material>
    <surface>
      <friction>
        <ode>
          <mu>0.01</mu>
          <mu2>0.01</mu2>
        </ode>
      </friction>
    </surface>
  </gazebo>

</robot>